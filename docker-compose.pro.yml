version: '3'

services:
  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./deploy/data/nginx/conf.d:/etc/nginx/conf.d
      - ./deploy/data/certbot/conf:/etc/letsencrypt
      - ./deploy/data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - billing_web
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./deploy/data/certbot/conf:/etc/letsencrypt
      - ./deploy/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  server:
    image: postgrest/postgrest
    restart: unless-stopped
    ports:
      - 4000:3000
    environment:
      PGRST_DB_URI: $PGRST_DB_URI
      PGRST_DB_SCHEMA: $PGRST_DB_SCHEMA
      PGRST_DB_ANON_ROLE: $PGRST_DB_ANON_ROLE
      PGRST_JWT_SECRET: $JWT_SECRET

  api:
    image: node:11
    restart: unless-stopped
    user: node
    working_dir: /home/node/app
    environment:
      API_DB_URI: $API_DB_URI
      JWT_SECRET: $JWT_SECRET
    ports:
      - 5000:5000
    volumes:
      - ./api:/home/node/app
    command: npm start
